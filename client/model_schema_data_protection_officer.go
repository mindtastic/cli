/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SchemaDataProtectionOfficer struct for SchemaDataProtectionOfficer
type SchemaDataProtectionOfficer struct {
	Name *string `json:"name,omitempty"`
	Address *string `json:"address,omitempty"`
	Country *string `json:"country,omitempty"`
	Email *string `json:"email,omitempty"`
	Phone *string `json:"phone,omitempty"`
}

// NewSchemaDataProtectionOfficer instantiates a new SchemaDataProtectionOfficer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemaDataProtectionOfficer() *SchemaDataProtectionOfficer {
	this := SchemaDataProtectionOfficer{}
	return &this
}

// NewSchemaDataProtectionOfficerWithDefaults instantiates a new SchemaDataProtectionOfficer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemaDataProtectionOfficerWithDefaults() *SchemaDataProtectionOfficer {
	this := SchemaDataProtectionOfficer{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SchemaDataProtectionOfficer) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDataProtectionOfficer) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SchemaDataProtectionOfficer) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SchemaDataProtectionOfficer) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SchemaDataProtectionOfficer) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDataProtectionOfficer) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SchemaDataProtectionOfficer) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *SchemaDataProtectionOfficer) SetAddress(v string) {
	o.Address = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *SchemaDataProtectionOfficer) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDataProtectionOfficer) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *SchemaDataProtectionOfficer) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *SchemaDataProtectionOfficer) SetCountry(v string) {
	o.Country = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *SchemaDataProtectionOfficer) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDataProtectionOfficer) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *SchemaDataProtectionOfficer) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *SchemaDataProtectionOfficer) SetEmail(v string) {
	o.Email = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *SchemaDataProtectionOfficer) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDataProtectionOfficer) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *SchemaDataProtectionOfficer) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *SchemaDataProtectionOfficer) SetPhone(v string) {
	o.Phone = &v
}

func (o SchemaDataProtectionOfficer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	return json.Marshal(toSerialize)
}

type NullableSchemaDataProtectionOfficer struct {
	value *SchemaDataProtectionOfficer
	isSet bool
}

func (v NullableSchemaDataProtectionOfficer) Get() *SchemaDataProtectionOfficer {
	return v.value
}

func (v *NullableSchemaDataProtectionOfficer) Set(val *SchemaDataProtectionOfficer) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaDataProtectionOfficer) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaDataProtectionOfficer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaDataProtectionOfficer(val *SchemaDataProtectionOfficer) *NullableSchemaDataProtectionOfficer {
	return &NullableSchemaDataProtectionOfficer{value: val, isSet: true}
}

func (v NullableSchemaDataProtectionOfficer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaDataProtectionOfficer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


