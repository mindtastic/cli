/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SchemaDataDisclosedInnerNonDisclosure struct for SchemaDataDisclosedInnerNonDisclosure
type SchemaDataDisclosedInnerNonDisclosure struct {
	LegalRequirement bool `json:"legalRequirement"`
	ContractualRegulation bool `json:"contractualRegulation"`
	ObligationToProvide bool `json:"obligationToProvide"`
	Consequences string `json:"consequences"`
}

// NewSchemaDataDisclosedInnerNonDisclosure instantiates a new SchemaDataDisclosedInnerNonDisclosure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemaDataDisclosedInnerNonDisclosure(legalRequirement bool, contractualRegulation bool, obligationToProvide bool, consequences string) *SchemaDataDisclosedInnerNonDisclosure {
	this := SchemaDataDisclosedInnerNonDisclosure{}
	this.LegalRequirement = legalRequirement
	this.ContractualRegulation = contractualRegulation
	this.ObligationToProvide = obligationToProvide
	this.Consequences = consequences
	return &this
}

// NewSchemaDataDisclosedInnerNonDisclosureWithDefaults instantiates a new SchemaDataDisclosedInnerNonDisclosure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemaDataDisclosedInnerNonDisclosureWithDefaults() *SchemaDataDisclosedInnerNonDisclosure {
	this := SchemaDataDisclosedInnerNonDisclosure{}
	return &this
}

// GetLegalRequirement returns the LegalRequirement field value
func (o *SchemaDataDisclosedInnerNonDisclosure) GetLegalRequirement() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LegalRequirement
}

// GetLegalRequirementOk returns a tuple with the LegalRequirement field value
// and a boolean to check if the value has been set.
func (o *SchemaDataDisclosedInnerNonDisclosure) GetLegalRequirementOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalRequirement, true
}

// SetLegalRequirement sets field value
func (o *SchemaDataDisclosedInnerNonDisclosure) SetLegalRequirement(v bool) {
	o.LegalRequirement = v
}

// GetContractualRegulation returns the ContractualRegulation field value
func (o *SchemaDataDisclosedInnerNonDisclosure) GetContractualRegulation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContractualRegulation
}

// GetContractualRegulationOk returns a tuple with the ContractualRegulation field value
// and a boolean to check if the value has been set.
func (o *SchemaDataDisclosedInnerNonDisclosure) GetContractualRegulationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractualRegulation, true
}

// SetContractualRegulation sets field value
func (o *SchemaDataDisclosedInnerNonDisclosure) SetContractualRegulation(v bool) {
	o.ContractualRegulation = v
}

// GetObligationToProvide returns the ObligationToProvide field value
func (o *SchemaDataDisclosedInnerNonDisclosure) GetObligationToProvide() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ObligationToProvide
}

// GetObligationToProvideOk returns a tuple with the ObligationToProvide field value
// and a boolean to check if the value has been set.
func (o *SchemaDataDisclosedInnerNonDisclosure) GetObligationToProvideOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObligationToProvide, true
}

// SetObligationToProvide sets field value
func (o *SchemaDataDisclosedInnerNonDisclosure) SetObligationToProvide(v bool) {
	o.ObligationToProvide = v
}

// GetConsequences returns the Consequences field value
func (o *SchemaDataDisclosedInnerNonDisclosure) GetConsequences() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Consequences
}

// GetConsequencesOk returns a tuple with the Consequences field value
// and a boolean to check if the value has been set.
func (o *SchemaDataDisclosedInnerNonDisclosure) GetConsequencesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Consequences, true
}

// SetConsequences sets field value
func (o *SchemaDataDisclosedInnerNonDisclosure) SetConsequences(v string) {
	o.Consequences = v
}

func (o SchemaDataDisclosedInnerNonDisclosure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["legalRequirement"] = o.LegalRequirement
	}
	if true {
		toSerialize["contractualRegulation"] = o.ContractualRegulation
	}
	if true {
		toSerialize["obligationToProvide"] = o.ObligationToProvide
	}
	if true {
		toSerialize["consequences"] = o.Consequences
	}
	return json.Marshal(toSerialize)
}

type NullableSchemaDataDisclosedInnerNonDisclosure struct {
	value *SchemaDataDisclosedInnerNonDisclosure
	isSet bool
}

func (v NullableSchemaDataDisclosedInnerNonDisclosure) Get() *SchemaDataDisclosedInnerNonDisclosure {
	return v.value
}

func (v *NullableSchemaDataDisclosedInnerNonDisclosure) Set(val *SchemaDataDisclosedInnerNonDisclosure) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaDataDisclosedInnerNonDisclosure) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaDataDisclosedInnerNonDisclosure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaDataDisclosedInnerNonDisclosure(val *SchemaDataDisclosedInnerNonDisclosure) *NullableSchemaDataDisclosedInnerNonDisclosure {
	return &NullableSchemaDataDisclosedInnerNonDisclosure{value: val, isSet: true}
}

func (v NullableSchemaDataDisclosedInnerNonDisclosure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaDataDisclosedInnerNonDisclosure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


