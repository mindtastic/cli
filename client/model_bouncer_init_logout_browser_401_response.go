/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BouncerInitLogoutBrowser401Response struct for BouncerInitLogoutBrowser401Response
type BouncerInitLogoutBrowser401Response struct {
	Error GenericError `json:"error"`
}

// NewBouncerInitLogoutBrowser401Response instantiates a new BouncerInitLogoutBrowser401Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBouncerInitLogoutBrowser401Response(error_ GenericError) *BouncerInitLogoutBrowser401Response {
	this := BouncerInitLogoutBrowser401Response{}
	this.Error = error_
	return &this
}

// NewBouncerInitLogoutBrowser401ResponseWithDefaults instantiates a new BouncerInitLogoutBrowser401Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBouncerInitLogoutBrowser401ResponseWithDefaults() *BouncerInitLogoutBrowser401Response {
	this := BouncerInitLogoutBrowser401Response{}
	return &this
}

// GetError returns the Error field value
func (o *BouncerInitLogoutBrowser401Response) GetError() GenericError {
	if o == nil {
		var ret GenericError
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *BouncerInitLogoutBrowser401Response) GetErrorOk() (*GenericError, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *BouncerInitLogoutBrowser401Response) SetError(v GenericError) {
	o.Error = v
}

func (o BouncerInitLogoutBrowser401Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableBouncerInitLogoutBrowser401Response struct {
	value *BouncerInitLogoutBrowser401Response
	isSet bool
}

func (v NullableBouncerInitLogoutBrowser401Response) Get() *BouncerInitLogoutBrowser401Response {
	return v.value
}

func (v *NullableBouncerInitLogoutBrowser401Response) Set(val *BouncerInitLogoutBrowser401Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBouncerInitLogoutBrowser401Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBouncerInitLogoutBrowser401Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBouncerInitLogoutBrowser401Response(val *BouncerInitLogoutBrowser401Response) *NullableBouncerInitLogoutBrowser401Response {
	return &NullableBouncerInitLogoutBrowser401Response{value: val, isSet: true}
}

func (v NullableBouncerInitLogoutBrowser401Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBouncerInitLogoutBrowser401Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


