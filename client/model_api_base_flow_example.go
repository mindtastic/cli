/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ApiBaseFlowExample struct for ApiBaseFlowExample
type ApiBaseFlowExample struct {
}

// NewApiBaseFlowExample instantiates a new ApiBaseFlowExample object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBaseFlowExample() *ApiBaseFlowExample {
	this := ApiBaseFlowExample{}
	return &this
}

// NewApiBaseFlowExampleWithDefaults instantiates a new ApiBaseFlowExample object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBaseFlowExampleWithDefaults() *ApiBaseFlowExample {
	this := ApiBaseFlowExample{}
	return &this
}

func (o ApiBaseFlowExample) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	return json.Marshal(toSerialize)
}

type NullableApiBaseFlowExample struct {
	value *ApiBaseFlowExample
	isSet bool
}

func (v NullableApiBaseFlowExample) Get() *ApiBaseFlowExample {
	return v.value
}

func (v *NullableApiBaseFlowExample) Set(val *ApiBaseFlowExample) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBaseFlowExample) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBaseFlowExample) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBaseFlowExample(val *ApiBaseFlowExample) *NullableApiBaseFlowExample {
	return &NullableApiBaseFlowExample{value: val, isSet: true}
}

func (v NullableApiBaseFlowExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBaseFlowExample) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


