/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RegistrationWithFlowIdResponse Registration with FlowID
type RegistrationWithFlowIdResponse struct {
	Identity *Identity `json:"identity,omitempty"`
	Session *Session1 `json:"session,omitempty"`
	// The Session Token  A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization  Header: Authorization: bearer ${session-token} The session token is only issued for API flows, not for Browser flows!
	SessionToken *string `json:"session_token,omitempty"`
}

// NewRegistrationWithFlowIdResponse instantiates a new RegistrationWithFlowIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationWithFlowIdResponse() *RegistrationWithFlowIdResponse {
	this := RegistrationWithFlowIdResponse{}
	return &this
}

// NewRegistrationWithFlowIdResponseWithDefaults instantiates a new RegistrationWithFlowIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationWithFlowIdResponseWithDefaults() *RegistrationWithFlowIdResponse {
	this := RegistrationWithFlowIdResponse{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *RegistrationWithFlowIdResponse) GetIdentity() Identity {
	if o == nil || o.Identity == nil {
		var ret Identity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationWithFlowIdResponse) GetIdentityOk() (*Identity, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *RegistrationWithFlowIdResponse) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given Identity and assigns it to the Identity field.
func (o *RegistrationWithFlowIdResponse) SetIdentity(v Identity) {
	o.Identity = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *RegistrationWithFlowIdResponse) GetSession() Session1 {
	if o == nil || o.Session == nil {
		var ret Session1
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationWithFlowIdResponse) GetSessionOk() (*Session1, bool) {
	if o == nil || o.Session == nil {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *RegistrationWithFlowIdResponse) HasSession() bool {
	if o != nil && o.Session != nil {
		return true
	}

	return false
}

// SetSession gets a reference to the given Session1 and assigns it to the Session field.
func (o *RegistrationWithFlowIdResponse) SetSession(v Session1) {
	o.Session = &v
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *RegistrationWithFlowIdResponse) GetSessionToken() string {
	if o == nil || o.SessionToken == nil {
		var ret string
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationWithFlowIdResponse) GetSessionTokenOk() (*string, bool) {
	if o == nil || o.SessionToken == nil {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *RegistrationWithFlowIdResponse) HasSessionToken() bool {
	if o != nil && o.SessionToken != nil {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given string and assigns it to the SessionToken field.
func (o *RegistrationWithFlowIdResponse) SetSessionToken(v string) {
	o.SessionToken = &v
}

func (o RegistrationWithFlowIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if o.Session != nil {
		toSerialize["session"] = o.Session
	}
	if o.SessionToken != nil {
		toSerialize["session_token"] = o.SessionToken
	}
	return json.Marshal(toSerialize)
}

type NullableRegistrationWithFlowIdResponse struct {
	value *RegistrationWithFlowIdResponse
	isSet bool
}

func (v NullableRegistrationWithFlowIdResponse) Get() *RegistrationWithFlowIdResponse {
	return v.value
}

func (v *NullableRegistrationWithFlowIdResponse) Set(val *RegistrationWithFlowIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationWithFlowIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationWithFlowIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationWithFlowIdResponse(val *RegistrationWithFlowIdResponse) *NullableRegistrationWithFlowIdResponse {
	return &NullableRegistrationWithFlowIdResponse{value: val, isSet: true}
}

func (v NullableRegistrationWithFlowIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationWithFlowIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


