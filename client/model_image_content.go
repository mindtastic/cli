/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ImageContent struct for ImageContent
type ImageContent struct {
	Type string `json:"type"`
	Url string `json:"url"`
}

// NewImageContent instantiates a new ImageContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageContent(type_ string, url string) *ImageContent {
	this := ImageContent{}
	this.Type = type_
	this.Url = url
	return &this
}

// NewImageContentWithDefaults instantiates a new ImageContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageContentWithDefaults() *ImageContent {
	this := ImageContent{}
	return &this
}

// GetType returns the Type field value
func (o *ImageContent) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ImageContent) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ImageContent) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *ImageContent) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ImageContent) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ImageContent) SetUrl(v string) {
	o.Url = v
}

func (o ImageContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableImageContent struct {
	value *ImageContent
	isSet bool
}

func (v NullableImageContent) Get() *ImageContent {
	return v.value
}

func (v *NullableImageContent) Set(val *ImageContent) {
	v.value = val
	v.isSet = true
}

func (v NullableImageContent) IsSet() bool {
	return v.isSet
}

func (v *NullableImageContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageContent(val *ImageContent) *NullableImageContent {
	return &NullableImageContent{value: val, isSet: true}
}

func (v NullableImageContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


