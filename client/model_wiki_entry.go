/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// WikiEntry struct for WikiEntry
type WikiEntry struct {
	Content string `json:"content"`
}

// NewWikiEntry instantiates a new WikiEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWikiEntry(content string) *WikiEntry {
	this := WikiEntry{}
	this.Content = content
	return &this
}

// NewWikiEntryWithDefaults instantiates a new WikiEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWikiEntryWithDefaults() *WikiEntry {
	this := WikiEntry{}
	return &this
}

// GetContent returns the Content field value
func (o *WikiEntry) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *WikiEntry) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *WikiEntry) SetContent(v string) {
	o.Content = v
}

func (o WikiEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableWikiEntry struct {
	value *WikiEntry
	isSet bool
}

func (v NullableWikiEntry) Get() *WikiEntry {
	return v.value
}

func (v *NullableWikiEntry) Set(val *WikiEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableWikiEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableWikiEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWikiEntry(val *WikiEntry) *NullableWikiEntry {
	return &NullableWikiEntry{value: val, isSet: true}
}

func (v NullableWikiEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWikiEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


