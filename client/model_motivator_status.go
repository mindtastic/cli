/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MotivatorStatus struct for MotivatorStatus
type MotivatorStatus struct {
	Status string `json:"status"`
}

// NewMotivatorStatus instantiates a new MotivatorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMotivatorStatus(status string) *MotivatorStatus {
	this := MotivatorStatus{}
	this.Status = status
	return &this
}

// NewMotivatorStatusWithDefaults instantiates a new MotivatorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMotivatorStatusWithDefaults() *MotivatorStatus {
	this := MotivatorStatus{}
	return &this
}

// GetStatus returns the Status field value
func (o *MotivatorStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MotivatorStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MotivatorStatus) SetStatus(v string) {
	o.Status = v
}

func (o MotivatorStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMotivatorStatus struct {
	value *MotivatorStatus
	isSet bool
}

func (v NullableMotivatorStatus) Get() *MotivatorStatus {
	return v.value
}

func (v *NullableMotivatorStatus) Set(val *MotivatorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMotivatorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMotivatorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMotivatorStatus(val *MotivatorStatus) *NullableMotivatorStatus {
	return &NullableMotivatorStatus{value: val, isSet: true}
}

func (v NullableMotivatorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMotivatorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


