/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 1.0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MoodIdObj struct for MoodIdObj
type MoodIdObj struct {
	Id int32 `json:"id"`
}

// NewMoodIdObj instantiates a new MoodIdObj object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoodIdObj(id int32) *MoodIdObj {
	this := MoodIdObj{}
	this.Id = id
	return &this
}

// NewMoodIdObjWithDefaults instantiates a new MoodIdObj object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoodIdObjWithDefaults() *MoodIdObj {
	this := MoodIdObj{}
	return &this
}

// GetId returns the Id field value
func (o *MoodIdObj) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MoodIdObj) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MoodIdObj) SetId(v int32) {
	o.Id = v
}

func (o MoodIdObj) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableMoodIdObj struct {
	value *MoodIdObj
	isSet bool
}

func (v NullableMoodIdObj) Get() *MoodIdObj {
	return v.value
}

func (v *NullableMoodIdObj) Set(val *MoodIdObj) {
	v.value = val
	v.isSet = true
}

func (v NullableMoodIdObj) IsSet() bool {
	return v.isSet
}

func (v *NullableMoodIdObj) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoodIdObj(val *MoodIdObj) *NullableMoodIdObj {
	return &NullableMoodIdObj{value: val, isSet: true}
}

func (v NullableMoodIdObj) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoodIdObj) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


