/*
Kopfsachen

Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.

API version: 0.2
Contact: mail@kopfsachen.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RegistrationWithFlowIdResponse Registration with FlowID
type RegistrationWithFlowIdResponse struct {
	AccountKey string `json:"accountKey"`
}

// NewRegistrationWithFlowIdResponse instantiates a new RegistrationWithFlowIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationWithFlowIdResponse(accountKey string) *RegistrationWithFlowIdResponse {
	this := RegistrationWithFlowIdResponse{}
	this.AccountKey = accountKey
	return &this
}

// NewRegistrationWithFlowIdResponseWithDefaults instantiates a new RegistrationWithFlowIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationWithFlowIdResponseWithDefaults() *RegistrationWithFlowIdResponse {
	this := RegistrationWithFlowIdResponse{}
	return &this
}

// GetAccountKey returns the AccountKey field value
func (o *RegistrationWithFlowIdResponse) GetAccountKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountKey
}

// GetAccountKeyOk returns a tuple with the AccountKey field value
// and a boolean to check if the value has been set.
func (o *RegistrationWithFlowIdResponse) GetAccountKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountKey, true
}

// SetAccountKey sets field value
func (o *RegistrationWithFlowIdResponse) SetAccountKey(v string) {
	o.AccountKey = v
}

func (o RegistrationWithFlowIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountKey"] = o.AccountKey
	}
	return json.Marshal(toSerialize)
}

type NullableRegistrationWithFlowIdResponse struct {
	value *RegistrationWithFlowIdResponse
	isSet bool
}

func (v NullableRegistrationWithFlowIdResponse) Get() *RegistrationWithFlowIdResponse {
	return v.value
}

func (v *NullableRegistrationWithFlowIdResponse) Set(val *RegistrationWithFlowIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationWithFlowIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationWithFlowIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationWithFlowIdResponse(val *RegistrationWithFlowIdResponse) *NullableRegistrationWithFlowIdResponse {
	return &NullableRegistrationWithFlowIdResponse{value: val, isSet: true}
}

func (v NullableRegistrationWithFlowIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationWithFlowIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


